
# R script exploring cross sample comparison for MMETSP samples in TRAPID2.0
# Nick Dillen

# Dependencies
library('RMySQL')
library('rjson')
library('glue')
library('plyr')
library('dplyr')
library("ggplot2")
library('randomcoloR')
library('rCharts')
library('rbokeh')

#### source for functions ####

source("compare_functions.R")

#### SCRIPT ####

# Read configuration data to connect to DB
config <- fromJSON(file="../../../config_connect_trapid.json")

# get selection of experiments
usr_id = get_user_ID(config, "nidil")

#### ZENODO versus Imic : annotated with picoPlAZA ####
# Comparison of basic statistics

# Selection of experiments
exps_zen = select_exp(config, usr_id, "zenodo", refDB_query = "pico")
exps_mic = select_exp(config, usr_id, "imicrobe", refDB_query = "pico")

# Count total transcripts for both selections
exps_zen = transcripts_count(config, exps_zen)
exps_mic = transcripts_count(config, exps_mic)

# Count total transcripts in GF, BE CAREFUL to use when more then 20 ish experiments selected, for 100 exps : 6m21s
exps_zen = transcripts_in_GF_count(config, exps_zen)
exps_mic = transcripts_in_GF_count(config, exps_mic)

# normalize
exps_zen["GF_inclusion_ratio"] = exps_zen$transcripts_in_GF_count/exps_zen$transcripts_count
exps_mic["GF_inclusion_ratio"] = exps_mic$transcripts_in_GF_count/exps_mic$transcripts_count

# get taxonomic composition and plot for all samples
tax_comp_mic = tax_composition(config, exps_mic)
plot_tax_composition(tax_comp_mic, cutoff = 0.05, title = "Taxonomic composition based on Kaiju of MMETSP samples iMICROBE" )






tax_comp_zen = tax_composition(config, exps_zen)
plot_tax_composition(tax_comp_zen, cutoff = 0.05, title = "Taxonomic composition based on Kaiju of MMETSP samples ZENODO" )

# Count number of transcripts annotated with MMETS species annotation








#### base statistic plots ####

# for each MMETSP sample: plot mic and zen value _> scatterlpot
# amount of transcripts

hoverdf1 = as.data.frame(cbind(exps_zen$title, exps_zen$transcripts_count, exps_mic$transcripts_count))
colnames(hoverdf1) = c('sample name', '#trs in GF DIB-lab', '#trs in GF NCGR')

#bobble size
# blob_size = (exps_zen$transcripts_count+exps_mic$transcripts_count)/(0.1*mean(c(exps_mic$transcripts_count, exps_zen$transcripts_count)))
blob_size = 15

transcripts_count_plot <- figure(width = 800, title = "# Assembled transcripts for different assemblies (original (NCGR) vs. DIB-lab)") %>%
  ly_points(exps_zen$transcripts_count, exps_mic$transcripts_count,
            hover = hoverdf1) %>%
  ly_abline(0, 1, legend = "Line with slope = 1") %>%
  x_axis(label = '# transcripts DIB-lab') %>%
  y_axis(label = "# transcripts NCGR")

transcripts_count_plot

# amount of transcripts in GF
hoverdf2 = as.data.frame(cbind(exps_zen$title, exps_zen$transcripts_in_GF_count, exps_mic$transcripts_in_GF_count))
colnames(hoverdf2) = c('sample name', '#trs in GF DIB-lab', '#trs in GF NCGR')

# blob_size = ((exps_mic$transcripts_in_GF_count + exps_zen$transcripts_in_GF_count)/(0.1*mean(c(exps_mic$transcripts_in_GF_count, exps_zen$transcripts_in_GF_count))))

transcripts_in_GF_count_plot <- figure(width = 800, title = "# Assembled transcripts in a GF for different assemblies (original (NCGR) vs. DIB-lab)") %>%
  ly_points(exps_zen$transcripts_in_GF_count, exps_mic$transcripts_in_GF_count,
            hover = hoverdf2 , color = 'red' ) %>%
  ly_abline(0, 1, legend = "Line with slope = 1") %>%
  x_axis(label = '# transcripts in GF Zen') %>%
  y_axis(label = "# transcripts in GF iMic")

transcripts_in_GF_count_plot

# same for GF_inclusion ratio

# blob_size = (exps_zen$GF_inclusion_ratio + exps_mic$GF_inclusion_ratio)*10 


hoverdf3 = as.data.frame(cbind(exps_zen$title, round(exps_zen$GF_inclusion_ratio, 3), round(exps_mic$GF_inclusion_ratio,3)))
colnames(hoverdf3) = c('sample name', 'inclusion rate DIB-lab', 'inclusion rate NCGR')

GF_inclusion_plot <- figure(width = 800, title = "GF inclusion rate (trs in GF / all trs) for different assemblies (original (NCGR) vs. DIB-lab)") %>%
  ly_points(exps_zen$GF_inclusion_ratio, exps_mic$GF_inclusion_ratio,
            hover = hoverdf3, color = 'green' ) %>%
  ly_abline(0, 1, legend = "Line with slope = 1") %>%
  x_axis(label = 'GF inclusion rate DIB-lab') %>%
  y_axis(label = "GF inclusion rate NCGR")

GF_inclusion_plot




###### TEST field



#### TEST CASE ####

# Bathycoccus versus Aureococcus

cols = distinctColorPalette(4)
exps_AB = rbind(select_exp(config, 10, desc_query = c('BATHY', 'imicrobe'), color = cols[1]),
                select_exp(config, 10, desc_query = c('AUREO', 'imicrobe'), color = cols[2]),
                select_exp(config, 10, desc_query = c('BATHY', 'zenodo'),refDB_query = "pico", color = cols[3]),
                select_exp(config, 10, desc_query = c('AUREO', 'zenodo'), refDB_query = "pico", color = cols[4]))

exps_AB = do_all_after_select(config, exps_AB, user_id)
tax_comp_AB = tax_composition(config, exps_AB)
plot_tax_composition(tax_comp_AB, cutoff = 0.001)


# PCA
xx = GF_comparison_naive(config, exps_AB)
xx = xx[,-1]
xxt =t(xx)
pcs = prcomp(xxt)
summ = summary(pcs)
summ

### rBokeh plot
library(rbokeh)

pca_plot <- figure(width = 800, legend_location = 'bottom_right') %>%
  ly_points(pcs$x[,1], pcs$x[,2],
            color = exps_AB$desc_query, glyph = exps_AB$desc_query,
            hover = exps_AB["unique_title"], size = 15) %>%
  x_axis(label = glue('PC1 (explaining {x}% of variation)', x = summ$importance[2,1]*100)) %>%
  y_axis(label = glue('PC2 (explaining {x}% of variation)', x = summ$importance[2,2]*100))

pca_plot


###for zenodo


#exps_zen_toptax =  add_toptax(exps_zen, tax_comp_zen)

exps_zen = add_MMETSP_phylum(config, exps_zen)



# PCA
xxz = GF_comparison_naive(config, exps_zen)
xxz = xxz[,-1]
xxzt =t(xxz)
pcs = prcomp(xxzt)
pcasum = summary(pcs)
pcasum

### rBokeh plot
hoverdfPCA = as.data.frame(cbind(exps_zen$title, exps_zen$genus, exps_zen$species))
colnames(hoverdfPCA) = c('sample name', 'genus', 'species')


pca_plot1 <- figure(width = 800, height = 800, xlim =c(-45,80), title = "PCA on GF presence vectors of 90 MMETSP samples (DIB-lab assembly) Hover over samples to get annotation") %>%
  ly_points(pcs$x[,1], pcs$x[,2],
            color = exps_zen$phylum, glyph = exps_zen$genus,
            hover = hoverdfPCA, size = 15) %>%
  x_axis(label = glue('PC1 (explaining {x}% of variation)', x = pcasum$importance[2,1]*100)) %>%
  y_axis(label = glue('PC2 (explaining {x}% of variation)', x = pcasum$importance[2,2]*100))

pca_plot1

##### for MMETSP annot

exps_zen = add_MMETSP_genus(config, exps_zen)
exps_zen["annot"] = paste(exps_zen$genus, exps_zen$species)


# PCA
xx = GF_comparison_naive(config, exps_zen)
xx = xx[,-1]
xxt =t(xx)
pcs = prcomp(xxt)
sum = summary(pcs)
sum

### rBokeh plot
pca_plot1 <- figure(width = 800, height = 800, xlim = c(-45, 80), title = "PCA on GF presence vectors of 90 MMETSP samples (DIB-lab assembly) Hover over samples to get annotation") %>%
  ly_points(pcs$x[,1], pcs$x[,2],
            color = exps_zen$genus, glyph = exps_zen$species,
            hover = list(exps_zen$annot), size = 15) %>%
  x_axis(label = glue('PC1 (explaining {x}% of variation)', x = sum$importance[2,1]*100)) %>%
  y_axis(label = glue('PC2 (explaining {x}% of variation)', x = sum$importance[2,2]*100))
  
pca_plot1

### now for all samples

exps_All = rbind(exps_mic, exps_zen[,1:7])
tax_comp_All = rbind(tax_comp_mic, tax_comp_zen)
plot_tax_composition(tax_comp_All)


# PCA
xx = GF_comparison_naive(config, exps_All)
xx = xx[,-1]
xxt =t(xx)
pcs = prcomp(xxt)
sum = summary(pcs)
sum

### rBokeh plot
pca_plot_all <- figure() %>%
  ly_points(pcs$x[,1], pcs$x[,2],
            color = exps_All$desc_query, glyph = exps_All$desc_query,
            hover = exps_All["unique_title"], size = 15) %>%
  x_axis(label = glue('PC1 (explaining {x}% of variation)', x = sum$importance[2,1]*100)) %>%
  y_axis(label = glue('PC2 (explaining {x}% of variation)', x = sum$importance[2,2]*100))


pca_plot_all






